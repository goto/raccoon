// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: .temp/odpf/raccoon/v1beta1/raccoon.proto

package com.gotocompany.proton.raccoon;

/**
 * Protobuf type {@code odpf.raccoon.v1beta1.SendEventResponse}
 */
public final class SendEventResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:odpf.raccoon.v1beta1.SendEventResponse)
    SendEventResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SendEventResponse.newBuilder() to construct.
  private SendEventResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SendEventResponse() {
    status_ = 0;
    code_ = 0;
    reason_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SendEventResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SendEventResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            code_ = rawValue;
            break;
          }
          case 24: {

            sentTime_ = input.readInt64();
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            reason_ = s;
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              data_ = com.google.protobuf.MapField.newMapField(
                  DataDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            data__ = input.readMessage(
                DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            data_.getMutableMap().put(
                data__.getKey(), data__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return EventProto.internal_static_odpf_raccoon_v1beta1_SendEventResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetData();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return EventProto.internal_static_odpf_raccoon_v1beta1_SendEventResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            SendEventResponse.class, SendEventResponse.Builder.class);
  }

  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_;
  /**
   * <pre>
   * `status` denotes status of the request.
   * Only 3 values are valid. `SUCCESS` means the the request is processed
   * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
   * means Raccoon unable to determine whether the request is success or not.
   * </pre>
   *
   * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * `status` denotes status of the request.
   * Only 3 values are valid. `SUCCESS` means the the request is processed
   * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
   * means Raccoon unable to determine whether the request is success or not.
   * </pre>
   *
   * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
   * @return The status.
   */
  @java.lang.Override public Status getStatus() {
    @SuppressWarnings("deprecation")
    Status result = Status.valueOf(status_);
    return result == null ? Status.UNRECOGNIZED : result;
  }

  public static final int CODE_FIELD_NUMBER = 2;
  private int code_;
  /**
   * <pre>
   * `code` gives more detail of what happened to the request.
   * Details of available `code` can be seen below.
   * </pre>
   *
   * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
   * @return The enum numeric value on the wire for code.
   */
  @java.lang.Override public int getCodeValue() {
    return code_;
  }
  /**
   * <pre>
   * `code` gives more detail of what happened to the request.
   * Details of available `code` can be seen below.
   * </pre>
   *
   * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
   * @return The code.
   */
  @java.lang.Override public Code getCode() {
    @SuppressWarnings("deprecation")
    Code result = Code.valueOf(code_);
    return result == null ? Code.UNRECOGNIZED : result;
  }

  public static final int SENT_TIME_FIELD_NUMBER = 3;
  private long sentTime_;
  /**
   * <pre>
   * `sent_time` is UNIX timestamp populated by Raccoon by the time the response is sent.
   * </pre>
   *
   * <code>int64 sent_time = 3 [json_name = "sentTime"];</code>
   * @return The sentTime.
   */
  @java.lang.Override
  public long getSentTime() {
    return sentTime_;
  }

  public static final int REASON_FIELD_NUMBER = 4;
  private volatile java.lang.Object reason_;
  /**
   * <pre>
   * `reason` is additional-human readable information to provide more context to `status` and `code`.
   * There is no predefined structure for this. The value is arbitrary.
   * </pre>
   *
   * <code>string reason = 4 [json_name = "reason"];</code>
   * @return The reason.
   */
  @java.lang.Override
  public java.lang.String getReason() {
    java.lang.Object ref = reason_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      reason_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * `reason` is additional-human readable information to provide more context to `status` and `code`.
   * There is no predefined structure for this. The value is arbitrary.
   * </pre>
   *
   * <code>string reason = 4 [json_name = "reason"];</code>
   * @return The bytes for reason.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReasonBytes() {
    java.lang.Object ref = reason_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      reason_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DATA_FIELD_NUMBER = 5;
  private static final class DataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                EventProto.internal_static_odpf_raccoon_v1beta1_SendEventResponse_DataEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> data_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetData() {
    if (data_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DataDefaultEntryHolder.defaultEntry);
    }
    return data_;
  }

  public int getDataCount() {
    return internalGetData().getMap().size();
  }
  /**
   * <pre>
   * `data` is arbitrary extra metadata.
   * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
   * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
   * </pre>
   *
   * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
   */

  @java.lang.Override
  public boolean containsData(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetData().getMap().containsKey(key);
  }
  /**
   * Use {@link #getDataMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getData() {
    return getDataMap();
  }
  /**
   * <pre>
   * `data` is arbitrary extra metadata.
   * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
   * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
   * </pre>
   *
   * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getDataMap() {
    return internalGetData().getMap();
  }
  /**
   * <pre>
   * `data` is arbitrary extra metadata.
   * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
   * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
   * </pre>
   *
   * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
   */
  @java.lang.Override

  public java.lang.String getDataOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetData().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * `data` is arbitrary extra metadata.
   * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
   * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
   * </pre>
   *
   * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
   */
  @java.lang.Override

  public java.lang.String getDataOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetData().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (status_ != Status.STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, status_);
    }
    if (code_ != Code.CODE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, code_);
    }
    if (sentTime_ != 0L) {
      output.writeInt64(3, sentTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(reason_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, reason_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetData(),
        DataDefaultEntryHolder.defaultEntry,
        5);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (status_ != Status.STATUS_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    if (code_ != Code.CODE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, code_);
    }
    if (sentTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, sentTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(reason_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, reason_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetData().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      data__ = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, data__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof SendEventResponse)) {
      return super.equals(obj);
    }
    SendEventResponse other = (SendEventResponse) obj;

    if (status_ != other.status_) return false;
    if (code_ != other.code_) return false;
    if (getSentTime()
        != other.getSentTime()) return false;
    if (!getReason()
        .equals(other.getReason())) return false;
    if (!internalGetData().equals(
        other.internalGetData())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + CODE_FIELD_NUMBER;
    hash = (53 * hash) + code_;
    hash = (37 * hash) + SENT_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSentTime());
    hash = (37 * hash) + REASON_FIELD_NUMBER;
    hash = (53 * hash) + getReason().hashCode();
    if (!internalGetData().getMap().isEmpty()) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetData().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static SendEventResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SendEventResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SendEventResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SendEventResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SendEventResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SendEventResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SendEventResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SendEventResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static SendEventResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static SendEventResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static SendEventResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SendEventResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(SendEventResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code odpf.raccoon.v1beta1.SendEventResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:odpf.raccoon.v1beta1.SendEventResponse)
          SendEventResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return EventProto.internal_static_odpf_raccoon_v1beta1_SendEventResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EventProto.internal_static_odpf_raccoon_v1beta1_SendEventResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SendEventResponse.class, SendEventResponse.Builder.class);
    }

    // Construct using io.odpf.proton.raccoon.SendEventResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      status_ = 0;

      code_ = 0;

      sentTime_ = 0L;

      reason_ = "";

      internalGetMutableData().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return EventProto.internal_static_odpf_raccoon_v1beta1_SendEventResponse_descriptor;
    }

    @java.lang.Override
    public SendEventResponse getDefaultInstanceForType() {
      return SendEventResponse.getDefaultInstance();
    }

    @java.lang.Override
    public SendEventResponse build() {
      SendEventResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public SendEventResponse buildPartial() {
      SendEventResponse result = new SendEventResponse(this);
      int from_bitField0_ = bitField0_;
      result.status_ = status_;
      result.code_ = code_;
      result.sentTime_ = sentTime_;
      result.reason_ = reason_;
      result.data_ = internalGetData();
      result.data_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof SendEventResponse) {
        return mergeFrom((SendEventResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(SendEventResponse other) {
      if (other == SendEventResponse.getDefaultInstance()) return this;
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (other.code_ != 0) {
        setCodeValue(other.getCodeValue());
      }
      if (other.getSentTime() != 0L) {
        setSentTime(other.getSentTime());
      }
      if (!other.getReason().isEmpty()) {
        reason_ = other.reason_;
        onChanged();
      }
      internalGetMutableData().mergeFrom(
          other.internalGetData());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      SendEventResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (SendEventResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <pre>
     * `status` denotes status of the request.
     * Only 3 values are valid. `SUCCESS` means the the request is processed
     * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
     * means Raccoon unable to determine whether the request is success or not.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * `status` denotes status of the request.
     * Only 3 values are valid. `SUCCESS` means the the request is processed
     * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
     * means Raccoon unable to determine whether the request is success or not.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `status` denotes status of the request.
     * Only 3 values are valid. `SUCCESS` means the the request is processed
     * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
     * means Raccoon unable to determine whether the request is success or not.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override
    public Status getStatus() {
      @SuppressWarnings("deprecation")
      Status result = Status.valueOf(status_);
      return result == null ? Status.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * `status` denotes status of the request.
     * Only 3 values are valid. `SUCCESS` means the the request is processed
     * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
     * means Raccoon unable to determine whether the request is success or not.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `status` denotes status of the request.
     * Only 3 values are valid. `SUCCESS` means the the request is processed
     * successfully. `ERROR` means the request failed to be processed. `UNKNOWN_STATUS` 
     * means Raccoon unable to determine whether the request is success or not.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Status status = 1 [json_name = "status"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private int code_ = 0;
    /**
     * <pre>
     * `code` gives more detail of what happened to the request.
     * Details of available `code` can be seen below.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override public int getCodeValue() {
      return code_;
    }
    /**
     * <pre>
     * `code` gives more detail of what happened to the request.
     * Details of available `code` can be seen below.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
     * @param value The enum numeric value on the wire for code to set.
     * @return This builder for chaining.
     */
    public Builder setCodeValue(int value) {
      
      code_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `code` gives more detail of what happened to the request.
     * Details of available `code` can be seen below.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
     * @return The code.
     */
    @java.lang.Override
    public Code getCode() {
      @SuppressWarnings("deprecation")
      Code result = Code.valueOf(code_);
      return result == null ? Code.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * `code` gives more detail of what happened to the request.
     * Details of available `code` can be seen below.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
     * @param value The code to set.
     * @return This builder for chaining.
     */
    public Builder setCode(Code value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      code_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `code` gives more detail of what happened to the request.
     * Details of available `code` can be seen below.
     * </pre>
     *
     * <code>.odpf.raccoon.v1beta1.Code code = 2 [json_name = "code"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCode() {
      
      code_ = 0;
      onChanged();
      return this;
    }

    private long sentTime_ ;
    /**
     * <pre>
     * `sent_time` is UNIX timestamp populated by Raccoon by the time the response is sent.
     * </pre>
     *
     * <code>int64 sent_time = 3 [json_name = "sentTime"];</code>
     * @return The sentTime.
     */
    @java.lang.Override
    public long getSentTime() {
      return sentTime_;
    }
    /**
     * <pre>
     * `sent_time` is UNIX timestamp populated by Raccoon by the time the response is sent.
     * </pre>
     *
     * <code>int64 sent_time = 3 [json_name = "sentTime"];</code>
     * @param value The sentTime to set.
     * @return This builder for chaining.
     */
    public Builder setSentTime(long value) {
      
      sentTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `sent_time` is UNIX timestamp populated by Raccoon by the time the response is sent.
     * </pre>
     *
     * <code>int64 sent_time = 3 [json_name = "sentTime"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSentTime() {
      
      sentTime_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object reason_ = "";
    /**
     * <pre>
     * `reason` is additional-human readable information to provide more context to `status` and `code`.
     * There is no predefined structure for this. The value is arbitrary.
     * </pre>
     *
     * <code>string reason = 4 [json_name = "reason"];</code>
     * @return The reason.
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reason_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * `reason` is additional-human readable information to provide more context to `status` and `code`.
     * There is no predefined structure for this. The value is arbitrary.
     * </pre>
     *
     * <code>string reason = 4 [json_name = "reason"];</code>
     * @return The bytes for reason.
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * `reason` is additional-human readable information to provide more context to `status` and `code`.
     * There is no predefined structure for this. The value is arbitrary.
     * </pre>
     *
     * <code>string reason = 4 [json_name = "reason"];</code>
     * @param value The reason to set.
     * @return This builder for chaining.
     */
    public Builder setReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      reason_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `reason` is additional-human readable information to provide more context to `status` and `code`.
     * There is no predefined structure for this. The value is arbitrary.
     * </pre>
     *
     * <code>string reason = 4 [json_name = "reason"];</code>
     * @return This builder for chaining.
     */
    public Builder clearReason() {
      
      reason_ = getDefaultInstance().getReason();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `reason` is additional-human readable information to provide more context to `status` and `code`.
     * There is no predefined structure for this. The value is arbitrary.
     * </pre>
     *
     * <code>string reason = 4 [json_name = "reason"];</code>
     * @param value The bytes for reason to set.
     * @return This builder for chaining.
     */
    public Builder setReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      reason_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> data_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetData() {
      if (data_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DataDefaultEntryHolder.defaultEntry);
      }
      return data_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableData() {
      onChanged();;
      if (data_ == null) {
        data_ = com.google.protobuf.MapField.newMapField(
            DataDefaultEntryHolder.defaultEntry);
      }
      if (!data_.isMutable()) {
        data_ = data_.copy();
      }
      return data_;
    }

    public int getDataCount() {
      return internalGetData().getMap().size();
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */

    @java.lang.Override
    public boolean containsData(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getData() {
      return getDataMap();
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getDataMap() {
      return internalGetData().getMap();
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */
    @java.lang.Override

    public java.lang.String getDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */
    @java.lang.Override

    public java.lang.String getDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearData() {
      internalGetMutableData().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */

    public Builder removeData(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableData().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableData() {
      return internalGetMutableData().getMutableMap();
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */
    public Builder putData(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableData().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * `data` is arbitrary extra metadata.
     * Arbitrary key-value makes the field flexible for future changes. `req_guid` is also sent as part
     * of `data`. The client may fetch req_guid as key to get the `req_guid` value.
     * </pre>
     *
     * <code>map&lt;string, string&gt; data = 5 [json_name = "data"];</code>
     */

    public Builder putAllData(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableData().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:odpf.raccoon.v1beta1.SendEventResponse)
  }

  // @@protoc_insertion_point(class_scope:odpf.raccoon.v1beta1.SendEventResponse)
  private static final SendEventResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SendEventResponse();
  }

  public static SendEventResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SendEventResponse>
      PARSER = new com.google.protobuf.AbstractParser<SendEventResponse>() {
    @java.lang.Override
    public SendEventResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SendEventResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SendEventResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SendEventResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public SendEventResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

